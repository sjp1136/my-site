{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId])\n      /******/\n      return installedModules[moduleId].exports;\n    /******/\n\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.loaded = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(0);\n  /******/\n}(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var React = __webpack_require__(1);\n\n  var ReactDOM = __webpack_require__(2);\n\n  var _ = __webpack_require__(3);\n\n  var $ = __webpack_require__(4);\n\n  var createReactClass = __webpack_require__(5);\n\n  var PropTypes = __webpack_require__(13);\n\n  module.exports = createReactClass({\n    propTypes: {\n      render: PropTypes.func\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    getInitialState: function getInitialState() {\n      return {\n        hover: false\n      };\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return !_.isEqual(nextProps, this.props) || !_.isEqual(nextState, this.state) || !_.isEqual(nextContext, this.context);\n    },\n    isHovered: function isHovered(element) {\n      try {\n        return element && $(element).is(':hover');\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    componentDidMount: function componentDidMount() {\n      this.isMounted = true;\n      var This = this;\n      setTimeout(function () {\n        if (This.isMounted) {\n          var element = ReactDOM.findDOMNode(This);\n          This.setState({\n            hover: !!This.isHovered(element)\n          });\n        }\n      }, 1);\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      this.isMounted = false;\n    },\n    componentDidUpdate: function componentDidUpdate(prevProps, prevState, prevContext) {\n      var This = this;\n      setTimeout(function () {\n        if (This.isMounted) {\n          var element = ReactDOM.findDOMNode(This);\n          This.setState({\n            hover: !!This.isHovered(element)\n          });\n        }\n      }, 1);\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    displayName: 'HoverBox',\n    render: function render() {\n      return React.createElement('div', {\n        className: this.state.hover ? 'hover' : 'not-hover',\n        onMouseEnter: this.onMouseEnter,\n        onMouseLeave: this.onMouseLeave,\n        onMouseOver: this.onMouseOver\n      }, this.props.render(this.state.hover));\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    onMouseEnter: function onMouseEnter() {\n      if (this.state.hover == false) {\n        this.setState({\n          hover: true\n        });\n      }\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    onMouseOver: function onMouseOver() {\n      if (this.state.hover == false) {\n        this.setState({\n          hover: true\n        });\n      }\n    },\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    onMouseLeave: function onMouseLeave() {\n      if (this.state.hover == true) {\n        this.setState({\n          hover: false\n        });\n      }\n    }\n  }); // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /***/\n},\n/* 1 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react\");\n  /***/\n},\n/* 2 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react-dom\");\n  /***/\n},\n/* 3 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"lodash\");\n  /***/\n},\n/* 4 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"jquery\");\n  /***/\n},\n/* 5 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   */\n  'use strict';\n\n  var React = __webpack_require__(1);\n\n  var factory = __webpack_require__(6);\n\n  if (typeof React === 'undefined') {\n    throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');\n  } // Hack to grab NoopUpdateQueue from isomorphic React\n\n\n  var ReactNoopUpdateQueue = new React.Component().updater;\n  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);\n  /***/\n},\n/* 6 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n    'use strict';\n\n    var _assign = __webpack_require__(8);\n\n    var emptyObject = __webpack_require__(9);\n\n    var _invariant = __webpack_require__(10);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warning = __webpack_require__(11);\n    }\n\n    var MIXINS_KEY = 'mixins'; // Helper function to allow the creation of anonymous functions which do not\n    // have .name set to the name of the variable being assigned to.\n\n    function identity(fn) {\n      return fn;\n    }\n\n    var ReactPropTypeLocationNames;\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactPropTypeLocationNames = {\n        prop: 'prop',\n        context: 'context',\n        childContext: 'child context'\n      };\n    } else {\n      ReactPropTypeLocationNames = {};\n    }\n\n    function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n      /**\n       * Policies that describe methods in `ReactClassInterface`.\n       */\n      var injectedMixins = [];\n      /**\n       * Composite components are higher-level components that compose other composite\n       * or host components.\n       *\n       * To create a new type of `ReactClass`, pass a specification of\n       * your new class to `React.createClass`. The only requirement of your class\n       * specification is that you implement a `render` method.\n       *\n       *   var MyComponent = React.createClass({\n       *     render: function() {\n       *       return <div>Hello World</div>;\n       *     }\n       *   });\n       *\n       * The class specification supports a specific protocol of methods that have\n       * special meaning (e.g. `render`). See `ReactClassInterface` for\n       * more the comprehensive protocol. Any other properties and methods in the\n       * class specification will be available on the prototype.\n       *\n       * @interface ReactClassInterface\n       * @internal\n       */\n\n      var ReactClassInterface = {\n        /**\n         * An array of Mixin objects to include when defining your component.\n         *\n         * @type {array}\n         * @optional\n         */\n        mixins: 'DEFINE_MANY',\n\n        /**\n         * An object containing properties and methods that should be defined on\n         * the component's constructor instead of its prototype (static methods).\n         *\n         * @type {object}\n         * @optional\n         */\n        statics: 'DEFINE_MANY',\n\n        /**\n         * Definition of prop types for this component.\n         *\n         * @type {object}\n         * @optional\n         */\n        propTypes: 'DEFINE_MANY',\n\n        /**\n         * Definition of context types for this component.\n         *\n         * @type {object}\n         * @optional\n         */\n        contextTypes: 'DEFINE_MANY',\n\n        /**\n         * Definition of context types this component sets for its children.\n         *\n         * @type {object}\n         * @optional\n         */\n        childContextTypes: 'DEFINE_MANY',\n        // ==== Definition methods ====\n\n        /**\n         * Invoked when the component is mounted. Values in the mapping will be set on\n         * `this.props` if that prop is not specified (i.e. using an `in` check).\n         *\n         * This method is invoked before `getInitialState` and therefore cannot rely\n         * on `this.state` or use `this.setState`.\n         *\n         * @return {object}\n         * @optional\n         */\n        getDefaultProps: 'DEFINE_MANY_MERGED',\n\n        /**\n         * Invoked once before the component is mounted. The return value will be used\n         * as the initial value of `this.state`.\n         *\n         *   getInitialState: function() {\n         *     return {\n         *       isOn: false,\n         *       fooBaz: new BazFoo()\n         *     }\n         *   }\n         *\n         * @return {object}\n         * @optional\n         */\n        getInitialState: 'DEFINE_MANY_MERGED',\n\n        /**\n         * @return {object}\n         * @optional\n         */\n        getChildContext: 'DEFINE_MANY_MERGED',\n\n        /**\n         * Uses props from `this.props` and state from `this.state` to render the\n         * structure of the component.\n         *\n         * No guarantees are made about when or how often this method is invoked, so\n         * it must not have side effects.\n         *\n         *   render: function() {\n         *     var name = this.props.name;\n         *     return <div>Hello, {name}!</div>;\n         *   }\n         *\n         * @return {ReactComponent}\n         * @required\n         */\n        render: 'DEFINE_ONCE',\n        // ==== Delegate methods ====\n\n        /**\n         * Invoked when the component is initially created and about to be mounted.\n         * This may have side effects, but any external subscriptions or data created\n         * by this method must be cleaned up in `componentWillUnmount`.\n         *\n         * @optional\n         */\n        componentWillMount: 'DEFINE_MANY',\n\n        /**\n         * Invoked when the component has been mounted and has a DOM representation.\n         * However, there is no guarantee that the DOM node is in the document.\n         *\n         * Use this as an opportunity to operate on the DOM when the component has\n         * been mounted (initialized and rendered) for the first time.\n         *\n         * @param {DOMElement} rootNode DOM element representing the component.\n         * @optional\n         */\n        componentDidMount: 'DEFINE_MANY',\n\n        /**\n         * Invoked before the component receives new props.\n         *\n         * Use this as an opportunity to react to a prop transition by updating the\n         * state using `this.setState`. Current props are accessed via `this.props`.\n         *\n         *   componentWillReceiveProps: function(nextProps, nextContext) {\n         *     this.setState({\n         *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n         *     });\n         *   }\n         *\n         * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n         * transition may cause a state change, but the opposite is not true. If you\n         * need it, you are probably looking for `componentWillUpdate`.\n         *\n         * @param {object} nextProps\n         * @optional\n         */\n        componentWillReceiveProps: 'DEFINE_MANY',\n\n        /**\n         * Invoked while deciding if the component should be updated as a result of\n         * receiving new props, state and/or context.\n         *\n         * Use this as an opportunity to `return false` when you're certain that the\n         * transition to the new props/state/context will not require a component\n         * update.\n         *\n         *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n         *     return !equal(nextProps, this.props) ||\n         *       !equal(nextState, this.state) ||\n         *       !equal(nextContext, this.context);\n         *   }\n         *\n         * @param {object} nextProps\n         * @param {?object} nextState\n         * @param {?object} nextContext\n         * @return {boolean} True if the component should update.\n         * @optional\n         */\n        shouldComponentUpdate: 'DEFINE_ONCE',\n\n        /**\n         * Invoked when the component is about to update due to a transition from\n         * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n         * and `nextContext`.\n         *\n         * Use this as an opportunity to perform preparation before an update occurs.\n         *\n         * NOTE: You **cannot** use `this.setState()` in this method.\n         *\n         * @param {object} nextProps\n         * @param {?object} nextState\n         * @param {?object} nextContext\n         * @param {ReactReconcileTransaction} transaction\n         * @optional\n         */\n        componentWillUpdate: 'DEFINE_MANY',\n\n        /**\n         * Invoked when the component's DOM representation has been updated.\n         *\n         * Use this as an opportunity to operate on the DOM when the component has\n         * been updated.\n         *\n         * @param {object} prevProps\n         * @param {?object} prevState\n         * @param {?object} prevContext\n         * @param {DOMElement} rootNode DOM element representing the component.\n         * @optional\n         */\n        componentDidUpdate: 'DEFINE_MANY',\n\n        /**\n         * Invoked when the component is about to be removed from its parent and have\n         * its DOM representation destroyed.\n         *\n         * Use this as an opportunity to deallocate any external resources.\n         *\n         * NOTE: There is no `componentDidUnmount` since your component will have been\n         * destroyed by that point.\n         *\n         * @optional\n         */\n        componentWillUnmount: 'DEFINE_MANY',\n\n        /**\n         * Replacement for (deprecated) `componentWillMount`.\n         *\n         * @optional\n         */\n        UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n        /**\n         * Replacement for (deprecated) `componentWillReceiveProps`.\n         *\n         * @optional\n         */\n        UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n        /**\n         * Replacement for (deprecated) `componentWillUpdate`.\n         *\n         * @optional\n         */\n        UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n        // ==== Advanced methods ====\n\n        /**\n         * Updates the component's currently mounted DOM representation.\n         *\n         * By default, this implements React's rendering and reconciliation algorithm.\n         * Sophisticated clients may wish to override this.\n         *\n         * @param {ReactReconcileTransaction} transaction\n         * @internal\n         * @overridable\n         */\n        updateComponent: 'OVERRIDE_BASE'\n      };\n      /**\n       * Similar to ReactClassInterface but for static methods.\n       */\n\n      var ReactClassStaticInterface = {\n        /**\n         * This method is invoked after a component is instantiated and when it\n         * receives new props. Return an object to update state in response to\n         * prop changes. Return null to indicate no change to state.\n         *\n         * If an object is returned, its keys will be merged into the existing state.\n         *\n         * @return {object || null}\n         * @optional\n         */\n        getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n      };\n      /**\n       * Mapping from class specification keys to special processing functions.\n       *\n       * Although these are declared like instance properties in the specification\n       * when defining classes using `React.createClass`, they are actually static\n       * and are accessible on the constructor instead of the prototype. Despite\n       * being static, they must be defined outside of the \"statics\" key under\n       * which all other static methods are defined.\n       */\n\n      var RESERVED_SPEC_KEYS = {\n        displayName: function displayName(Constructor, _displayName) {\n          Constructor.displayName = _displayName;\n        },\n        mixins: function mixins(Constructor, _mixins) {\n          if (_mixins) {\n            for (var i = 0; i < _mixins.length; i++) {\n              mixSpecIntoComponent(Constructor, _mixins[i]);\n            }\n          }\n        },\n        childContextTypes: function childContextTypes(Constructor, _childContextTypes) {\n          if (process.env.NODE_ENV !== 'production') {\n            validateTypeDef(Constructor, _childContextTypes, 'childContext');\n          }\n\n          Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);\n        },\n        contextTypes: function contextTypes(Constructor, _contextTypes) {\n          if (process.env.NODE_ENV !== 'production') {\n            validateTypeDef(Constructor, _contextTypes, 'context');\n          }\n\n          Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);\n        },\n\n        /**\n         * Special case getDefaultProps which should move into statics but requires\n         * automatic merging.\n         */\n        getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {\n          if (Constructor.getDefaultProps) {\n            Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);\n          } else {\n            Constructor.getDefaultProps = _getDefaultProps;\n          }\n        },\n        propTypes: function propTypes(Constructor, _propTypes) {\n          if (process.env.NODE_ENV !== 'production') {\n            validateTypeDef(Constructor, _propTypes, 'prop');\n          }\n\n          Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);\n        },\n        statics: function statics(Constructor, _statics) {\n          mixStaticSpecIntoComponent(Constructor, _statics);\n        },\n        autobind: function autobind() {}\n      };\n\n      function validateTypeDef(Constructor, typeDef, location) {\n        for (var propName in typeDef) {\n          if (typeDef.hasOwnProperty(propName)) {\n            // use a warning instead of an _invariant so components\n            // don't show up in prod but only in __DEV__\n            if (process.env.NODE_ENV !== 'production') {\n              warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);\n            }\n          }\n        }\n      }\n\n      function validateMethodOverride(isAlreadyDefined, name) {\n        var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null; // Disallow overriding of base class methods unless explicitly allowed.\n\n        if (ReactClassMixin.hasOwnProperty(name)) {\n          _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);\n        } // Disallow defining methods more than once unless explicitly allowed.\n\n\n        if (isAlreadyDefined) {\n          _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);\n        }\n      }\n      /**\n       * Mixin helper which handles policy validation and reserved\n       * specification keys when building React classes.\n       */\n\n\n      function mixSpecIntoComponent(Constructor, spec) {\n        if (!spec) {\n          if (process.env.NODE_ENV !== 'production') {\n            var typeofSpec = typeof spec;\n            var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(isMixinValid, \"%s: You're attempting to include a mixin that is either null \" + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);\n            }\n          }\n\n          return;\n        }\n\n        _invariant(typeof spec !== 'function', \"ReactClass: You're attempting to \" + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');\n\n        _invariant(!isValidElement(spec), \"ReactClass: You're attempting to \" + 'use a component as a mixin. Instead, just use a regular object.');\n\n        var proto = Constructor.prototype;\n        var autoBindPairs = proto.__reactAutoBindPairs; // By handling mixins before any other properties, we ensure the same\n        // chaining order is applied to methods with DEFINE_MANY policy, whether\n        // mixins are listed before or after these methods in the spec.\n\n        if (spec.hasOwnProperty(MIXINS_KEY)) {\n          RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n        }\n\n        for (var name in spec) {\n          if (!spec.hasOwnProperty(name)) {\n            continue;\n          }\n\n          if (name === MIXINS_KEY) {\n            // We have already handled mixins in a special case above.\n            continue;\n          }\n\n          var property = spec[name];\n          var isAlreadyDefined = proto.hasOwnProperty(name);\n          validateMethodOverride(isAlreadyDefined, name);\n\n          if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n            RESERVED_SPEC_KEYS[name](Constructor, property);\n          } else {\n            // Setup methods on prototype:\n            // The following member methods should not be automatically bound:\n            // 1. Expected ReactClass methods (in the \"interface\").\n            // 2. Overridden methods (that were mixed in).\n            var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n            var isFunction = typeof property === 'function';\n            var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n            if (shouldAutoBind) {\n              autoBindPairs.push(name, property);\n              proto[name] = property;\n            } else {\n              if (isAlreadyDefined) {\n                var specPolicy = ReactClassInterface[name]; // These cases should already be caught by validateMethodOverride.\n\n                _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name); // For methods which are defined more than once, call the existing\n                // methods before calling the new property, merging if appropriate.\n\n\n                if (specPolicy === 'DEFINE_MANY_MERGED') {\n                  proto[name] = createMergedResultFunction(proto[name], property);\n                } else if (specPolicy === 'DEFINE_MANY') {\n                  proto[name] = createChainedFunction(proto[name], property);\n                }\n              } else {\n                proto[name] = property;\n\n                if (process.env.NODE_ENV !== 'production') {\n                  // Add verbose displayName to the function, which helps when looking\n                  // at profiling tools.\n                  if (typeof property === 'function' && spec.displayName) {\n                    proto[name].displayName = spec.displayName + '_' + name;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      function mixStaticSpecIntoComponent(Constructor, statics) {\n        if (!statics) {\n          return;\n        }\n\n        for (var name in statics) {\n          var property = statics[name];\n\n          if (!statics.hasOwnProperty(name)) {\n            continue;\n          }\n\n          var isReserved = name in RESERVED_SPEC_KEYS;\n\n          _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);\n\n          var isAlreadyDefined = name in Constructor;\n\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;\n\n            _invariant(specPolicy === 'DEFINE_MANY_MERGED', 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);\n\n            Constructor[name] = createMergedResultFunction(Constructor[name], property);\n            return;\n          }\n\n          Constructor[name] = property;\n        }\n      }\n      /**\n       * Merge two objects, but throw if both contain the same key.\n       *\n       * @param {object} one The first object, which is mutated.\n       * @param {object} two The second object\n       * @return {object} one after it has been mutated to contain everything in two.\n       */\n\n\n      function mergeIntoWithNoDuplicateKeys(one, two) {\n        _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');\n\n        for (var key in two) {\n          if (two.hasOwnProperty(key)) {\n            _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);\n\n            one[key] = two[key];\n          }\n        }\n\n        return one;\n      }\n      /**\n       * Creates a function that invokes two functions and merges their return values.\n       *\n       * @param {function} one Function to invoke first.\n       * @param {function} two Function to invoke second.\n       * @return {function} Function that invokes the two argument functions.\n       * @private\n       */\n\n\n      function createMergedResultFunction(one, two) {\n        return function mergedResult() {\n          var a = one.apply(this, arguments);\n          var b = two.apply(this, arguments);\n\n          if (a == null) {\n            return b;\n          } else if (b == null) {\n            return a;\n          }\n\n          var c = {};\n          mergeIntoWithNoDuplicateKeys(c, a);\n          mergeIntoWithNoDuplicateKeys(c, b);\n          return c;\n        };\n      }\n      /**\n       * Creates a function that invokes two functions and ignores their return vales.\n       *\n       * @param {function} one Function to invoke first.\n       * @param {function} two Function to invoke second.\n       * @return {function} Function that invokes the two argument functions.\n       * @private\n       */\n\n\n      function createChainedFunction(one, two) {\n        return function chainedFunction() {\n          one.apply(this, arguments);\n          two.apply(this, arguments);\n        };\n      }\n      /**\n       * Binds a method to the component.\n       *\n       * @param {object} component Component whose method is going to be bound.\n       * @param {function} method Method to be bound.\n       * @return {function} The bound method.\n       */\n\n\n      function bindAutoBindMethod(component, method) {\n        var boundMethod = method.bind(component);\n\n        if (process.env.NODE_ENV !== 'production') {\n          boundMethod.__reactBoundContext = component;\n          boundMethod.__reactBoundMethod = method;\n          boundMethod.__reactBoundArguments = null;\n          var componentName = component.constructor.displayName;\n          var _bind = boundMethod.bind;\n\n          boundMethod.bind = function (newThis) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            } // User is trying to bind() an autobound method; we effectively will\n            // ignore the value of \"this\" that the user is trying to use, so\n            // let's warn.\n\n\n            if (newThis !== component && newThis !== null) {\n              if (process.env.NODE_ENV !== 'production') {\n                warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);\n              }\n            } else if (!args.length) {\n              if (process.env.NODE_ENV !== 'production') {\n                warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);\n              }\n\n              return boundMethod;\n            }\n\n            var reboundMethod = _bind.apply(boundMethod, arguments);\n\n            reboundMethod.__reactBoundContext = component;\n            reboundMethod.__reactBoundMethod = method;\n            reboundMethod.__reactBoundArguments = args;\n            return reboundMethod;\n          };\n        }\n\n        return boundMethod;\n      }\n      /**\n       * Binds all auto-bound methods in a component.\n       *\n       * @param {object} component Component whose method is going to be bound.\n       */\n\n\n      function bindAutoBindMethods(component) {\n        var pairs = component.__reactAutoBindPairs;\n\n        for (var i = 0; i < pairs.length; i += 2) {\n          var autoBindKey = pairs[i];\n          var method = pairs[i + 1];\n          component[autoBindKey] = bindAutoBindMethod(component, method);\n        }\n      }\n\n      var IsMountedPreMixin = {\n        componentDidMount: function componentDidMount() {\n          this.__isMounted = true;\n        }\n      };\n      var IsMountedPostMixin = {\n        componentWillUnmount: function componentWillUnmount() {\n          this.__isMounted = false;\n        }\n      };\n      /**\n       * Add more to the ReactClass base class. These are all legacy features and\n       * therefore not already part of the modern ReactComponent.\n       */\n\n      var ReactClassMixin = {\n        /**\n         * TODO: This will be deprecated because state should always keep a consistent\n         * type signature and the only use case for this, is to avoid that.\n         */\n        replaceState: function replaceState(newState, callback) {\n          this.updater.enqueueReplaceState(this, newState, callback);\n        },\n\n        /**\n         * Checks whether or not this composite component is mounted.\n         * @return {boolean} True if mounted, false otherwise.\n         * @protected\n         * @final\n         */\n        isMounted: function isMounted() {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');\n            this.__didWarnIsMounted = true;\n          }\n\n          return !!this.__isMounted;\n        }\n      };\n\n      var ReactClassComponent = function ReactClassComponent() {};\n\n      _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n      /**\n       * Creates a composite component class given a class specification.\n       * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n       *\n       * @param {object} spec Class specification (which must define `render`).\n       * @return {function} Component constructor function.\n       * @public\n       */\n\n\n      function createClass(spec) {\n        // To keep our warnings more understandable, we'll use a little hack here to\n        // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n        // unnecessarily identify a class without displayName as 'Constructor'.\n        var Constructor = identity(function (props, context, updater) {\n          // This constructor gets overridden by mocks. The argument is used\n          // by mocks to assert on what gets mounted.\n          if (process.env.NODE_ENV !== 'production') {\n            warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');\n          } // Wire up auto-binding\n\n\n          if (this.__reactAutoBindPairs.length) {\n            bindAutoBindMethods(this);\n          }\n\n          this.props = props;\n          this.context = context;\n          this.refs = emptyObject;\n          this.updater = updater || ReactNoopUpdateQueue;\n          this.state = null; // ReactClasses doesn't have constructors. Instead, they use the\n          // getInitialState and componentWillMount methods for initialization.\n\n          var initialState = this.getInitialState ? this.getInitialState() : null;\n\n          if (process.env.NODE_ENV !== 'production') {\n            // We allow auto-mocks to proceed as if they're returning null.\n            if (initialState === undefined && this.getInitialState._isMockFunction) {\n              // This is probably bad practice. Consider warning here and\n              // deprecating this convenience.\n              initialState = null;\n            }\n          }\n\n          _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');\n\n          this.state = initialState;\n        });\n        Constructor.prototype = new ReactClassComponent();\n        Constructor.prototype.constructor = Constructor;\n        Constructor.prototype.__reactAutoBindPairs = [];\n        injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n        mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n        mixSpecIntoComponent(Constructor, spec);\n        mixSpecIntoComponent(Constructor, IsMountedPostMixin); // Initialize the defaultProps property after all mixins have been merged.\n\n        if (Constructor.getDefaultProps) {\n          Constructor.defaultProps = Constructor.getDefaultProps();\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          // This is a tag to indicate that the use of these method names is ok,\n          // since it's used with createClass. If it's not, then it's likely a\n          // mistake so we'll warn you to use the static property, property\n          // initializer or constructor respectively.\n          if (Constructor.getDefaultProps) {\n            Constructor.getDefaultProps.isReactClassApproved = {};\n          }\n\n          if (Constructor.prototype.getInitialState) {\n            Constructor.prototype.getInitialState.isReactClassApproved = {};\n          }\n        }\n\n        _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');\n          warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');\n          warning(!Constructor.prototype.UNSAFE_componentWillRecieveProps, '%s has a method called UNSAFE_componentWillRecieveProps(). ' + 'Did you mean UNSAFE_componentWillReceiveProps()?', spec.displayName || 'A component');\n        } // Reduce time spent doing lookups by setting these on the prototype.\n\n\n        for (var methodName in ReactClassInterface) {\n          if (!Constructor.prototype[methodName]) {\n            Constructor.prototype[methodName] = null;\n          }\n        }\n\n        return Constructor;\n      }\n\n      return createClass;\n    }\n\n    module.exports = factory;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 7 */\n\n/***/\nfunction (module, exports) {\n  // shim for using process in browser\n  var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    } // if setTimeout wasn't available but was latter defined\n\n\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    } // if clearTimeout wasn't available but was latter defined\n\n\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n\n    draining = false;\n\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n\n      queueIndex = -1;\n      len = queue.length;\n    }\n\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n\n    queue.push(new Item(fun, args));\n\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  }; // v8 likes predictible objects\n\n\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n\n  process.cwd = function () {\n    return '/';\n  };\n\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n\n  process.umask = function () {\n    return 0;\n  };\n  /***/\n\n},\n/* 8 */\n\n/***/\nfunction (module, exports) {\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n  'use strict';\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /***/\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n    'use strict';\n\n    var emptyObject = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(emptyObject);\n    }\n\n    module.exports = emptyObject;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 10 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n    'use strict';\n    /**\n     * Use invariant() to assert state which your program assumes to be true.\n     *\n     * Provide sprintf-style format (only %s is supported) and arguments\n     * to provide information about what broke and what you were\n     * expecting.\n     *\n     * The invariant message will be stripped in production, but the invariant\n     * will remain to ensure logic does not differ in production.\n     */\n\n    var validateFormat = function validateFormat(format) {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      validateFormat = function validateFormat(format) {\n        if (format === undefined) {\n          throw new Error('invariant requires an error message argument');\n        }\n      };\n    }\n\n    function invariant(condition, format, a, b, c, d, e, f) {\n      validateFormat(format);\n\n      if (!condition) {\n        var error;\n\n        if (format === undefined) {\n          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n        } else {\n          var args = [a, b, c, d, e, f];\n          var argIndex = 0;\n          error = new Error(format.replace(/%s/g, function () {\n            return args[argIndex++];\n          }));\n          error.name = 'Invariant Violation';\n        }\n\n        error.framesToPop = 1; // we don't care about invariant's own frame\n\n        throw error;\n      }\n    }\n\n    module.exports = invariant;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 11 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2014-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n    'use strict';\n\n    var emptyFunction = __webpack_require__(12);\n    /**\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n\n    var warning = emptyFunction;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var printWarning = function printWarning(format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n\n      warning = function warning(condition, format) {\n        if (format === undefined) {\n          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n\n        if (format.indexOf('Failed Composite propType: ') === 0) {\n          return; // Ignore CompositeComponent proptype check.\n        }\n\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n\n    module.exports = warning;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 12 */\n\n/***/\nfunction (module, exports) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  function makeEmptyFunction(arg) {\n    return function () {\n      return arg;\n    };\n  }\n  /**\n   * This function accepts and discards inputs; it has no side effects. This is\n   * primarily useful idiomatically for overridable function endpoints which\n   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n   */\n\n\n  var emptyFunction = function emptyFunction() {};\n\n  emptyFunction.thatReturns = makeEmptyFunction;\n  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n  emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n  emptyFunction.thatReturnsThis = function () {\n    return this;\n  };\n\n  emptyFunction.thatReturnsArgument = function (arg) {\n    return arg;\n  };\n\n  module.exports = emptyFunction;\n  /***/\n},\n/* 13 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    if (process.env.NODE_ENV !== 'production') {\n      var ReactIs = __webpack_require__(14); // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n\n      var throwOnDirectAccess = true;\n      module.exports = __webpack_require__(17)(ReactIs.isElement, throwOnDirectAccess);\n    } else {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = __webpack_require__(20)();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 14 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    'use strict';\n\n    if (process.env.NODE_ENV === 'production') {\n      module.exports = __webpack_require__(15);\n    } else {\n      module.exports = __webpack_require__(16);\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 15 */\n\n/***/\nfunction (module, exports) {\n  /** @license React v16.8.6\n   * react-is.production.min.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: !0\n  });\n  var b = \"function\" === typeof Symbol && Symbol[\"for\"],\n      c = b ? Symbol[\"for\"](\"react.element\") : 60103,\n      d = b ? Symbol[\"for\"](\"react.portal\") : 60106,\n      e = b ? Symbol[\"for\"](\"react.fragment\") : 60107,\n      f = b ? Symbol[\"for\"](\"react.strict_mode\") : 60108,\n      g = b ? Symbol[\"for\"](\"react.profiler\") : 60114,\n      h = b ? Symbol[\"for\"](\"react.provider\") : 60109,\n      k = b ? Symbol[\"for\"](\"react.context\") : 60110,\n      l = b ? Symbol[\"for\"](\"react.async_mode\") : 60111,\n      m = b ? Symbol[\"for\"](\"react.concurrent_mode\") : 60111,\n      n = b ? Symbol[\"for\"](\"react.forward_ref\") : 60112,\n      p = b ? Symbol[\"for\"](\"react.suspense\") : 60113,\n      q = b ? Symbol[\"for\"](\"react.memo\") : 60115,\n      r = b ? Symbol[\"for\"](\"react.lazy\") : 60116;\n\n  function t(a) {\n    if (\"object\" === typeof a && null !== a) {\n      var u = a.$$typeof;\n\n      switch (u) {\n        case c:\n          switch (a = a.type, a) {\n            case l:\n            case m:\n            case e:\n            case g:\n            case f:\n            case p:\n              return a;\n\n            default:\n              switch (a = a && a.$$typeof, a) {\n                case k:\n                case n:\n                case h:\n                  return a;\n\n                default:\n                  return u;\n              }\n\n          }\n\n        case r:\n        case q:\n        case d:\n          return u;\n      }\n    }\n  }\n\n  function v(a) {\n    return t(a) === m;\n  }\n\n  exports.typeOf = t;\n  exports.AsyncMode = l;\n  exports.ConcurrentMode = m;\n  exports.ContextConsumer = k;\n  exports.ContextProvider = h;\n  exports.Element = c;\n  exports.ForwardRef = n;\n  exports.Fragment = e;\n  exports.Lazy = r;\n  exports.Memo = q;\n  exports.Portal = d;\n  exports.Profiler = g;\n  exports.StrictMode = f;\n  exports.Suspense = p;\n\n  exports.isValidElementType = function (a) {\n    return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || \"object\" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);\n  };\n\n  exports.isAsyncMode = function (a) {\n    return v(a) || t(a) === l;\n  };\n\n  exports.isConcurrentMode = v;\n\n  exports.isContextConsumer = function (a) {\n    return t(a) === k;\n  };\n\n  exports.isContextProvider = function (a) {\n    return t(a) === h;\n  };\n\n  exports.isElement = function (a) {\n    return \"object\" === typeof a && null !== a && a.$$typeof === c;\n  };\n\n  exports.isForwardRef = function (a) {\n    return t(a) === n;\n  };\n\n  exports.isFragment = function (a) {\n    return t(a) === e;\n  };\n\n  exports.isLazy = function (a) {\n    return t(a) === r;\n  };\n\n  exports.isMemo = function (a) {\n    return t(a) === q;\n  };\n\n  exports.isPortal = function (a) {\n    return t(a) === d;\n  };\n\n  exports.isProfiler = function (a) {\n    return t(a) === g;\n  };\n\n  exports.isStrictMode = function (a) {\n    return t(a) === f;\n  };\n\n  exports.isSuspense = function (a) {\n    return t(a) === p;\n  };\n  /***/\n\n},\n/* 16 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /** @license React v16.8.6\n    * react-is.development.js\n    *\n    * Copyright (c) Facebook, Inc. and its affiliates.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    'use strict';\n\n    if (process.env.NODE_ENV !== \"production\") {\n      (function () {\n        'use strict';\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n\n        var hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol['for']('react.strict_mode') : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol['for']('react.profiler') : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol['for']('react.provider') : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol['for']('react.context') : 0xeace;\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol['for']('react.async_mode') : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol['for']('react.concurrent_mode') : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol['for']('react.forward_ref') : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol['for']('react.suspense') : 0xead1;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol['for']('react.memo') : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol['for']('react.lazy') : 0xead4;\n\n        function isValidElementType(type) {\n          return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n        }\n        /**\n         * Forked from fbjs/warning:\n         * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n         *\n         * Only change is we use console.warn instead of console.error,\n         * and do nothing when 'console' is not supported.\n         * This really simplifies the code.\n         * ---\n         * Similar to invariant but only logs a warning if the condition is not met.\n         * This can be used to log issues in development environments in critical\n         * paths. Removing the logging code for production environments will keep the\n         * same logic and follow the same code paths.\n         */\n\n\n        var lowPriorityWarning = function lowPriorityWarning() {};\n\n        {\n          var printWarning = function printWarning(format) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            var argIndex = 0;\n            var message = 'Warning: ' + format.replace(/%s/g, function () {\n              return args[argIndex++];\n            });\n\n            if (typeof console !== 'undefined') {\n              console.warn(message);\n            }\n\n            try {\n              // --- Welcome to debugging React ---\n              // This error was thrown as a convenience so that you can use this stack\n              // to find the callsite that caused this warning to fire.\n              throw new Error(message);\n            } catch (x) {}\n          };\n\n          lowPriorityWarning = function lowPriorityWarning(condition, format) {\n            if (format === undefined) {\n              throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n            }\n\n            if (!condition) {\n              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n                args[_key2 - 2] = arguments[_key2];\n              }\n\n              printWarning.apply(undefined, [format].concat(args));\n            }\n          };\n        }\n        var lowPriorityWarning$1 = lowPriorityWarning;\n\n        function typeOf(object) {\n          if (typeof object === 'object' && object !== null) {\n            var $$typeof = object.$$typeof;\n\n            switch ($$typeof) {\n              case REACT_ELEMENT_TYPE:\n                var type = object.type;\n\n                switch (type) {\n                  case REACT_ASYNC_MODE_TYPE:\n                  case REACT_CONCURRENT_MODE_TYPE:\n                  case REACT_FRAGMENT_TYPE:\n                  case REACT_PROFILER_TYPE:\n                  case REACT_STRICT_MODE_TYPE:\n                  case REACT_SUSPENSE_TYPE:\n                    return type;\n\n                  default:\n                    var $$typeofType = type && type.$$typeof;\n\n                    switch ($$typeofType) {\n                      case REACT_CONTEXT_TYPE:\n                      case REACT_FORWARD_REF_TYPE:\n                      case REACT_PROVIDER_TYPE:\n                        return $$typeofType;\n\n                      default:\n                        return $$typeof;\n                    }\n\n                }\n\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PORTAL_TYPE:\n                return $$typeof;\n            }\n          }\n\n          return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n\n\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n        function isAsyncMode(object) {\n          {\n            if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n              hasWarnedAboutDeprecatedIsAsyncMode = true;\n              lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n            }\n          }\n          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n\n        function isConcurrentMode(object) {\n          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n\n        function isContextConsumer(object) {\n          return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n\n        function isContextProvider(object) {\n          return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n\n        function isElement(object) {\n          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n\n        function isForwardRef(object) {\n          return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n\n        function isFragment(object) {\n          return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n\n        function isLazy(object) {\n          return typeOf(object) === REACT_LAZY_TYPE;\n        }\n\n        function isMemo(object) {\n          return typeOf(object) === REACT_MEMO_TYPE;\n        }\n\n        function isPortal(object) {\n          return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n\n        function isProfiler(object) {\n          return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n\n        function isStrictMode(object) {\n          return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n\n        function isSuspense(object) {\n          return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n\n        exports.typeOf = typeOf;\n        exports.AsyncMode = AsyncMode;\n        exports.ConcurrentMode = ConcurrentMode;\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isValidElementType = isValidElementType;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n      })();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 17 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    'use strict';\n\n    var ReactIs = __webpack_require__(14);\n\n    var assign = __webpack_require__(8);\n\n    var ReactPropTypesSecret = __webpack_require__(18);\n\n    var checkPropTypes = __webpack_require__(19);\n\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    var printWarning = function printWarning() {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      printWarning = function printWarning(text) {\n        var message = 'Warning: ' + text;\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n    }\n\n    function emptyFunctionThatReturnsNull() {\n      return null;\n    }\n\n    module.exports = function (isValidElement, throwOnDirectAccess) {\n      /* global Symbol */\n      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n      /**\n       * Returns the iterator method function contained on the iterable object.\n       *\n       * Be sure to invoke the function with the iterable as context:\n       *\n       *     var iteratorFn = getIteratorFn(myIterable);\n       *     if (iteratorFn) {\n       *       var iterator = iteratorFn.call(myIterable);\n       *       ...\n       *     }\n       *\n       * @param {?object} maybeIterable\n       * @return {?function}\n       */\n\n      function getIteratorFn(maybeIterable) {\n        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n        if (typeof iteratorFn === 'function') {\n          return iteratorFn;\n        }\n      }\n      /**\n       * Collection of methods that allow declaration and validation of props that are\n       * supplied to React components. Example usage:\n       *\n       *   var Props = require('ReactPropTypes');\n       *   var MyArticle = React.createClass({\n       *     propTypes: {\n       *       // An optional string prop named \"description\".\n       *       description: Props.string,\n       *\n       *       // A required enum prop named \"category\".\n       *       category: Props.oneOf(['News','Photos']).isRequired,\n       *\n       *       // A prop named \"dialog\" that requires an instance of Dialog.\n       *       dialog: Props.instanceOf(Dialog).isRequired\n       *     },\n       *     render: function() { ... }\n       *   });\n       *\n       * A more formal specification of how these methods are used:\n       *\n       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n       *   decl := ReactPropTypes.{type}(.isRequired)?\n       *\n       * Each and every declaration produces a function with the same signature. This\n       * allows the creation of custom validation functions. For example:\n       *\n       *  var MyLink = React.createClass({\n       *    propTypes: {\n       *      // An optional string or URI prop named \"href\".\n       *      href: function(props, propName, componentName) {\n       *        var propValue = props[propName];\n       *        if (propValue != null && typeof propValue !== 'string' &&\n       *            !(propValue instanceof URI)) {\n       *          return new Error(\n       *            'Expected a string or an URI for ' + propName + ' in ' +\n       *            componentName\n       *          );\n       *        }\n       *      }\n       *    },\n       *    render: function() {...}\n       *  });\n       *\n       * @internal\n       */\n\n\n      var ANONYMOUS = '<<anonymous>>'; // Important!\n      // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n      var ReactPropTypes = {\n        array: createPrimitiveTypeChecker('array'),\n        bool: createPrimitiveTypeChecker('boolean'),\n        func: createPrimitiveTypeChecker('function'),\n        number: createPrimitiveTypeChecker('number'),\n        object: createPrimitiveTypeChecker('object'),\n        string: createPrimitiveTypeChecker('string'),\n        symbol: createPrimitiveTypeChecker('symbol'),\n        any: createAnyTypeChecker(),\n        arrayOf: createArrayOfTypeChecker,\n        element: createElementTypeChecker(),\n        elementType: createElementTypeTypeChecker(),\n        instanceOf: createInstanceTypeChecker,\n        node: createNodeChecker(),\n        objectOf: createObjectOfTypeChecker,\n        oneOf: createEnumTypeChecker,\n        oneOfType: createUnionTypeChecker,\n        shape: createShapeTypeChecker,\n        exact: createStrictShapeTypeChecker\n      };\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n\n      /*eslint-disable no-self-compare*/\n\n      function is(x, y) {\n        // SameValue algorithm\n        if (x === y) {\n          // Steps 1-5, 7-10\n          // Steps 6.b-6.e: +0 != -0\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          // Step 6.a: NaN == NaN\n          return x !== x && y !== y;\n        }\n      }\n      /*eslint-enable no-self-compare*/\n\n      /**\n       * We use an Error-like object for backward compatibility as people may call\n       * PropTypes directly and inspect their output. However, we don't use real\n       * Errors anymore. We don't inspect their stack anyway, and creating them\n       * is prohibitively expensive if they are created too often, such as what\n       * happens in oneOfType() for any type before the one that matched.\n       */\n\n\n      function PropTypeError(message) {\n        this.message = message;\n        this.stack = '';\n      } // Make `instanceof Error` still work for returned errors.\n\n\n      PropTypeError.prototype = Error.prototype;\n\n      function createChainableTypeChecker(validate) {\n        if (process.env.NODE_ENV !== 'production') {\n          var manualPropTypeCallCache = {};\n          var manualPropTypeWarningCount = 0;\n        }\n\n        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n          componentName = componentName || ANONYMOUS;\n          propFullName = propFullName || propName;\n\n          if (secret !== ReactPropTypesSecret) {\n            if (throwOnDirectAccess) {\n              // New behavior only for users of `prop-types` package\n              var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n              err.name = 'Invariant Violation';\n              throw err;\n            } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n              // Old behavior for people using React.PropTypes\n              var cacheKey = componentName + ':' + propName;\n\n              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n              manualPropTypeWarningCount < 3) {\n                printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n                manualPropTypeCallCache[cacheKey] = true;\n                manualPropTypeWarningCount++;\n              }\n            }\n          }\n\n          if (props[propName] == null) {\n            if (isRequired) {\n              if (props[propName] === null) {\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n              }\n\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n            }\n\n            return null;\n          } else {\n            return validate(props, propName, componentName, location, propFullName);\n          }\n        }\n\n        var chainedCheckType = checkType.bind(null, false);\n        chainedCheckType.isRequired = checkType.bind(null, true);\n        return chainedCheckType;\n      }\n\n      function createPrimitiveTypeChecker(expectedType) {\n        function validate(props, propName, componentName, location, propFullName, secret) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== expectedType) {\n            // `propValue` being instance of, say, date/regexp, pass the 'object'\n            // check, but we can offer a more precise error message here rather than\n            // 'of type `object`'.\n            var preciseType = getPreciseType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createAnyTypeChecker() {\n        return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n      }\n\n      function createArrayOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n          }\n\n          var propValue = props[propName];\n\n          if (!Array.isArray(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n          }\n\n          for (var i = 0; i < propValue.length; i++) {\n            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createElementTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          if (!isValidElement(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createElementTypeTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          if (!ReactIs.isValidElementType(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createInstanceTypeChecker(expectedClass) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!(props[propName] instanceof expectedClass)) {\n            var expectedClassName = expectedClass.name || ANONYMOUS;\n            var actualClassName = getClassName(props[propName]);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createEnumTypeChecker(expectedValues) {\n        if (!Array.isArray(expectedValues)) {\n          if (process.env.NODE_ENV !== 'production') {\n            if (arguments.length > 1) {\n              printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n            } else {\n              printWarning('Invalid argument supplied to oneOf, expected an array.');\n            }\n          }\n\n          return emptyFunctionThatReturnsNull;\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          for (var i = 0; i < expectedValues.length; i++) {\n            if (is(propValue, expectedValues[i])) {\n              return null;\n            }\n          }\n\n          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n            var type = getPreciseType(value);\n\n            if (type === 'symbol') {\n              return String(value);\n            }\n\n            return value;\n          });\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createObjectOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n          }\n\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n          }\n\n          for (var key in propValue) {\n            if (has(propValue, key)) {\n              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createUnionTypeChecker(arrayOfTypeCheckers) {\n        if (!Array.isArray(arrayOfTypeCheckers)) {\n          process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n          return emptyFunctionThatReturnsNull;\n        }\n\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (typeof checker !== 'function') {\n            printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n            return emptyFunctionThatReturnsNull;\n          }\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n\n            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n              return null;\n            }\n          }\n\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createNodeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!isNode(props[propName])) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          }\n\n          for (var key in shapeTypes) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              continue;\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createStrictShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          } // We need to check all keys in case some are required but missing from\n          // props.\n\n\n          var allKeys = assign({}, props[propName], shapeTypes);\n\n          for (var key in allKeys) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function isNode(propValue) {\n        switch (typeof propValue) {\n          case 'number':\n          case 'string':\n          case 'undefined':\n            return true;\n\n          case 'boolean':\n            return !propValue;\n\n          case 'object':\n            if (Array.isArray(propValue)) {\n              return propValue.every(isNode);\n            }\n\n            if (propValue === null || isValidElement(propValue)) {\n              return true;\n            }\n\n            var iteratorFn = getIteratorFn(propValue);\n\n            if (iteratorFn) {\n              var iterator = iteratorFn.call(propValue);\n              var step;\n\n              if (iteratorFn !== propValue.entries) {\n                while (!(step = iterator.next()).done) {\n                  if (!isNode(step.value)) {\n                    return false;\n                  }\n                }\n              } else {\n                // Iterator will provide entry [k,v] tuples rather than values.\n                while (!(step = iterator.next()).done) {\n                  var entry = step.value;\n\n                  if (entry) {\n                    if (!isNode(entry[1])) {\n                      return false;\n                    }\n                  }\n                }\n              }\n            } else {\n              return false;\n            }\n\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function isSymbol(propType, propValue) {\n        // Native Symbol.\n        if (propType === 'symbol') {\n          return true;\n        } // falsy value can't be a Symbol\n\n\n        if (!propValue) {\n          return false;\n        } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n        if (propValue['@@toStringTag'] === 'Symbol') {\n          return true;\n        } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n        if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n          return true;\n        }\n\n        return false;\n      } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n      function getPropType(propValue) {\n        var propType = typeof propValue;\n\n        if (Array.isArray(propValue)) {\n          return 'array';\n        }\n\n        if (propValue instanceof RegExp) {\n          // Old webkits (at least until Android 4.0) return 'function' rather than\n          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n          // passes PropTypes.object.\n          return 'object';\n        }\n\n        if (isSymbol(propType, propValue)) {\n          return 'symbol';\n        }\n\n        return propType;\n      } // This handles more types than `getPropType`. Only used for error messages.\n      // See `createPrimitiveTypeChecker`.\n\n\n      function getPreciseType(propValue) {\n        if (typeof propValue === 'undefined' || propValue === null) {\n          return '' + propValue;\n        }\n\n        var propType = getPropType(propValue);\n\n        if (propType === 'object') {\n          if (propValue instanceof Date) {\n            return 'date';\n          } else if (propValue instanceof RegExp) {\n            return 'regexp';\n          }\n        }\n\n        return propType;\n      } // Returns a string that is postfixed to a warning about an invalid type.\n      // For example, \"undefined\" or \"of type array\"\n\n\n      function getPostfixForTypeWarning(value) {\n        var type = getPreciseType(value);\n\n        switch (type) {\n          case 'array':\n          case 'object':\n            return 'an ' + type;\n\n          case 'boolean':\n          case 'date':\n          case 'regexp':\n            return 'a ' + type;\n\n          default:\n            return type;\n        }\n      } // Returns class name of the object, if any.\n\n\n      function getClassName(propValue) {\n        if (!propValue.constructor || !propValue.constructor.name) {\n          return ANONYMOUS;\n        }\n\n        return propValue.constructor.name;\n      }\n\n      ReactPropTypes.checkPropTypes = checkPropTypes;\n      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n      ReactPropTypes.PropTypes = ReactPropTypes;\n      return ReactPropTypes;\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 18 */\n\n/***/\nfunction (module, exports) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  'use strict';\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  module.exports = ReactPropTypesSecret;\n  /***/\n},\n/* 19 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    'use strict';\n\n    var printWarning = function printWarning() {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var ReactPropTypesSecret = __webpack_require__(18);\n\n      var loggedTypeFailures = {};\n      var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      printWarning = function printWarning(text) {\n        var message = 'Warning: ' + text;\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n    }\n    /**\n     * Assert that the values match with the type specs.\n     * Error messages are memorized and will only be shown once.\n     *\n     * @param {object} typeSpecs Map of name to a ReactPropType\n     * @param {object} values Runtime values that need to be type-checked\n     * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n     * @param {string} componentName Name of the component for error messages.\n     * @param {?Function} getStack Returns the component stack.\n     * @private\n     */\n\n\n    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n      if (process.env.NODE_ENV !== 'production') {\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n\n              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n            } catch (ex) {\n              error = ex;\n            }\n\n            if (error && !(error instanceof Error)) {\n              printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n            }\n\n            if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error.message] = true;\n              var stack = getStack ? getStack() : '';\n              printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Resets warning cache when testing.\n     *\n     * @private\n     */\n\n\n    checkPropTypes.resetWarningCache = function () {\n      if (process.env.NODE_ENV !== 'production') {\n        loggedTypeFailures = {};\n      }\n    };\n\n    module.exports = checkPropTypes;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(7));\n  /***/\n},\n/* 20 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  'use strict';\n\n  var ReactPropTypesSecret = __webpack_require__(18);\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  module.exports = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    ;\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    }\n\n    ; // Important!\n    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n  /***/\n\n}]);","map":null,"metadata":{},"sourceType":"script"}